spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      default-filters:
        - TokenRelay
      routes:
        - id: admin-api-resource-server
          uri: http://localhost:8000
          predicates:
            - Path=/api/**
        - id: jcr-api-resource-server
          uri: http://localhost:9091
          predicates:
            - Path=/jcr/**
        - id: site-api-resource-server
          uri: http://localhost:9092
          predicates:
            - Path=/message/**
  security:
    oauth2:
      client:
        provider:
          my-keycloak-provider:
            issuer-uri: http://101.43.164.174:8888/auth/realms/spring-boot-quickstart
            # Individual properties can also be provided this way
        #            token-uri: http://localhost:8080/auth/realms/amrutrealm/protocol/openid-connect/token
        #            authorization-uri: http://localhost:8080/auth/realms/amrutrealm/protocol/openid-connect/auth
        #            userinfo-uri: http://localhost:8080/auth/realms/amrutrealm/protocol/openid-connect/userinfo
        #            user-name-attribute: preferred_username
        registration:
          keycloak-spring-gateway-client:
            provider: my-keycloak-provider
            scope: openid
            client-id: app-authz-rest-springboot
            client-secret: c37a0929-484d-4635-a41c-f3eb93519bf2
            authorization-grant-type: authorization_code
#             redirect-uri: "{baseUrl}/login/oauth2/code/keycloak"
eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    fetch-registry: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/
# Enable these to debug the Authorization flow
logging:
  level:
    org:
      springframework:
        security:
          web: INFO
server:
  port: 9090
  max-http-header-size: 2MB
management:
  endpoints:
    web:
      exposure:
        include: "*"